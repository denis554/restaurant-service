###############################################################################
## Default Resource Bundle file for the Stripes Framework. Values should be
## placed in here for the following:
##   - Form Field Labels, unless you want users to see a non-localized, non-
##     pretty name from the form field declaration (prettied up a little).
##   - Error messages for:
##       - Standard validation error messages
##       - Converter error messages
##       - Error messages used in your custom ActionBean classes
###############################################################################

# Resource strings used by the <stripes:errors> tag when there are no nested tags
stripes.errors.header=<div class="ui-body ui-body-a ui-corner-all" style="color:#b72222;"><h3>Please fix the following errors:</h3><ol>
stripes.errors.beforeError=<li>
stripes.errors.afterError=</li>
stripes.errors.footer=</ol></div>

# Resource strings used by the <stripes:errors> tag when displaying errors for a
# specific field (e.g. <stripes:errors field="password"/>). If not supplied the
# values above will be used instead.
stripes.fieldErrors.header=
stripes.fieldErrors.beforeError=<span style="color: #b72222;">
stripes.fieldErrors.afterError=</span><br />
stripes.fieldErrors.footer=

# Resource strings used by the stripes:messages tag
stripes.messages.header=<div class="ui-body ui-body-a ui-corner-all" style="color:#3EB249;"><ul class="messages">
stripes.messages.beforeMessage=<li>
stripes.messages.afterMessage=</li>
stripes.messages.footer=</ul></div>

# Validation error messages produced by Stripes' built-in converter classes. These
# are default error messages and can be overridden on per-field and per-form levels.
# Using the 'invalidNumber' error for a field 'age' of a form posting to
# '/user/Profile.action', the keys looked for (in order) would be:
#      1: /user/Profile.action.age.invalidNumber
#      2: /user/Profile.action.age.errorMessage
#      3: age.errorMessage
#      4: /user/Profile.action.invalidNumber
#      5: converter.number.invalidNumber
converter.number.invalidNumber=The value ({1}) entered in field {0} must be a valid number
converter.byte.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.short.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.integer.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.float.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.enum.notAnEnumeratedValue=The value "{1}" is not a valid value for field {0}
converter.date.invalidDate=The value ({1}) entered in field {0} must be a valid date
converter.email.invalidEmail=The value ({1}) entered is not a valid email address
converter.creditCard.invalidCreditCard=The value ({1}) entered is not a valid credit card number

# Validation error messages produced by Stripes' annotation based validations. These
# are default error messages and can be overridden on per-field and per-form levels.
# Using the 'valueNotPresent' required field error for a field 'username' of a form
# posting to '/user/Register.action', the keys looked for (in order) would be:
#      1: /user/Register.action.username.valueNotPresent
#      2: /user/Register.action.username.errorMessage
#      3: username.errorMessage
#      4: /user/Register.action.valueNotPresent
#      5: validation.required.valueNotPresent
validation.required.valueNotPresent={0} is a required field
validation.minlength.valueTooShort={0} must be at least {2} characters long
validation.maxlength.valueTooLong={0} must be no more than {2} characters long
validation.minvalue.valueBelowMinimum=The minimum allowed value for {0} is {2}
validation.maxvalue.valueAboveMaximum=The maximum allowed value for {0} is {2}
validation.mask.valueDoesNotMatch=<em>{1}</em> is not a valid {0}
validation.expression.valueFailedExpression=The value supplied ({1}) for field {0} is invalid
validation.file.postBodyTooBig=Total upload size of {3} KB exceeds the maximum size of {2} KB

# Action name
add=Add
update=Update
clear=Clear
catalog=Catalog of products

label.ProductCategory.name=Name
label.ProductCategory.code=Code

label.ProductCategory.search=Search categories...

label.Product.search=Search products...

label.present=presents
label.home=Home
label.info=Info
label.create=Create
label.edit=Edit
label.delete=Delete

label.dialog.ProductCategoryDelete=Delete
label.ask.ProductCategoryDelete=will be delete. Are you sure?
label.warning.ProductCategoryDelete=include products? You don't delete this category.

yes=Yes
no=No
close=Close

label.ProductName.enter=Enter product name...
label.ProductCode.enter=Enter product code...
label.ProductSellPrice.enter=Enter sell price of product...

label.message.ProductCategory.added=Product category \"{0}\" added to catalog.
label.message.ProductCategory.updated=Product category \"{0}\" updated.
label.message.ProductCategory.deleted=Product category \"{0}\" deleted from catalog.
label.error.ProductCategory.IncludeProducts=The category \"{2}\" include \"{3}\" products and cannot be removed.
label.error.ProductCategory.AlreadyExists=Product category with code \"{2}\" already exists.
label.error.ProductCategory.CatalogEmpty=Product catalog is empty.
label.error.ProductCategory.CatalogNotInclude=Product catalog does not include {0} \"{1}\".
label.error.ProductCategory.Empty={0} \"{1}\" does not include products.

label.message.Product.added=Product \"{0}\" added to \"{1}\".

category.id=Product category ID
category.name=Product category name
category.code=Product category code
